<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADw
        BgAAAk1TRnQBSQFMAgEBAgEAAXABAAFwAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJP8A/wD/AB0AAyABLQMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf//ADEAAzUBVUsAAf//ADEA
        AzUBVQgAA0oB8wMAAf8EAANeAdcEAANeAdcEAANcAdYEAANLAY8EAAMuAUcDKwFBAwAB/wNRAaEHAAH/
        GAADJQE3A1IBqAMGAQgoAAMEAQUDUwGqAz8BbdgAAzUBVQgAA1MBqggAA1oBxAQAA1oBxAQAA1kBwwQA
        A0cBggQAAysBQQsAAf8HAAH/GAADMAFKA0MB9AMdASgoAAMVARwDAAH/A00Bk9gAAzUBVQgAA1MBqjcA
        Af8HAAH/GAADIQEwA18B2gNLAYwoAAM5AV8DAAH/AzkBX9gAAzUBVQgAA1MBqjcAAf8HAAH/GAADCQEM
        A1MBqgNQAe8DHwEsIAADEgEXA1YBtgNaAewDEgEX2AADNQFVCAADUwGqCAADVQGsAwAB/wMAAf8IAAM1
        AVULAAH/CwAB/wcAAf8cAAMoATsDAAH/A1gBuAMPARQcAANEAXoDHAH8AzYBWNwAAzUBVQgAA1MBqggA
        A1gBvQQAAxsBJgNOAZUEAAM1AVULAAH/CwAB/wcAAf8gAAM9AWgDXAHnA1gBtwMtAUUDFQEdAwYBBwMD
        AQQDEAEVAygBOwNOAZgDTwHwA0sBjeAAAzUBVQgAA1MBqggAA1MBqhAAAzUBVQsAAf8LAAH/BwAB/yAA
        BAEDNAFTA10BzwNQAe8DWgHHA1UBsQNVAa4DWgG/A1sB5ANVAe4DQQFyAw0BEeAAAzUBVQgAA1MBqggA
        A1MBqhAAA0MBdwgAA1oB6wsAAf8HAAH/KAADJgE5Aw4B/gMAAf8DAAH/AwAB/wMAAf8DDgH+AzUBVegA
        AzUBVQgAA1MBqggAA1MBqhAAA0AB9QNYAbcDXwHlAyIBMQsAAf8HAAH/JAADIgExA10B1ANeAdIDOQFe
        Aw8BFAMGAQgDLQFFA1UBtAMcAf0DNwFaBALgAAM1AVUIAANTAaoIAANVAa0EAAMEAQUDSwGMBAADNQFV
        FwAB/wcAAf8kAANMAY4DXwHaAx0BKBAAAxQBGwNdAcwDWQHDAxYBHuAAAzUBVQgAA1MBqggAAxwB/QMT
        ARkDXQHMAyMBMgQAAysBQhcAAf8HAAH/JAADWwHeA0YBgBgAAysBQgNVAe4DLQFE4AADNQFVCAADUwGq
        CAADBgEIAzMBUQMbASYjAAH/BwAB/yQAAzcB9gM4AV0YAAMLAQ4DIgH6AzMBUOAAAzUBVQgAA1MBqjcA
        Af8HAAH/JAADXAHnA0IBdBgAAyEBMANKAfMDLwFJ4AADNQFVCAADUwGqNwAB/wcAAf8kAANVAawDWwHK
        GAADVgGyA18B1QMeASvgAAM1AVUIAANdAeMDUwGqA1MBqgNTAaoDUwGqA1MBqgNTAaoDUwGqA1MBqgNT
        AaoDUwGqA1MBqgNTAaoDUwGqA0wB8gcAAf8kAAMvAUkDWQHpA1IBowMgAS4DBwEJAwMBBAMZASIDRgGB
        Aw4B/gNGAYEDAwEE4AADNQFVSwAB/yQAAwcBCQM9AWcDNwH2A1sB2ANWAbMDVQGuA10BzANPAfADSgGL
        Aw4BEuQAAzABTAMnATpHAAH/LAADEQEWA1ABnANZAegDQwH0A1YBtQMmATnsAAQBAzEBTQM1AVUDNQFV
        AzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFV
        AyABLf8A/wD/AP8ALAABQgFNAT4HAAE+AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/AQAG/wYA
        Bv8GAAHAAQABAwP/BgAB3wH/AfsD/wYAAdkBVQELAfEB/wGPBgAB2wFVAWsB8QH/AY8GAAHbAf8B6wHx
        Af8BjwYAAdsB/wHrAfAB/wEPBgAB2wEbAWsB+AF/AR8GAAHbAUsBawH8AQABPwYAAdsBewFrAfwBAAE/
        BgAB2wF7AWsB/wEAAf8GAAHbAXgBawH+AQABPwYAAdsBSwHrAf4BPAE/BgAB2wELAesB/gF+AT8GAAHb
        AR8B6wH+AX4BPwYAAdsB/wHrAf4BfgE/BgAB2wH/AesB/gF+AT8GAAHYAQABCwH+AQABPwYAAd8B/wH7
        Af4BAAF/BgABzwH/AfsB/wGBAf8GAAHAAQABAwP/BgAG/wYABv8GAAs=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>